Projet python for data analysis

Tâches à effectuer et conclusion

Problem:
  The "spam" concept is diverse: advertisements for products/web
  sites, make money fast schemes, chain letters, pornography...
  Our collection of spam e-mails came from individuals who had filed spam.  
  Our collection of non-spam e-mails came from filed work and personal e-mails

Dataset: 
  Number of Instances: 4601 (1813 Spam = 39.4%)
  Number of Attributes: 58 (57 continuous, 1 nominal class label)
  Spam	  1813  (39.4%)
  Non-Spam  2788  (60.6%)

Attribute Information:
  The last column of 'spambase.data' denotes whether the e-mail was 
  considered spam (1) or not (0)
  - 48 continuous real [0,100] attributes of type word_freq_WORD = percentage of words in the e-mail that match WORD, characters or end-of-string.
  - 6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR,
  - 1 continuous real [1,...] attribute of type capital_run_length_average = average length of uninterrupted sequences of capital letters
  - 1 continuous integer [1,...] attribute of type capital_run_length_longest = length of longest uninterrupted sequence of capital letters
  - 1 continuous integer [1,...] attribute of type capital_run_length_total = total number of capital letters in the e-mail
  - 1 nominal {0,1} class attribute of type spam = denotes whether the e-mail was considered spam (1) or not (0), 

Fonctionnement de l'API:
  API flask réalisée en python.
  Pour Tester l'API vous devez d'abord lancer le fichier flask_server.py
  Par la suite vous pouvez tester une requete en executant le fichier request.py
  Nous avons aussi développer une page web qui permet à un utilisateur de remplir une zone de texte 
  Puis en appuyant sur le bouton extract de remplir la liste des champs numériques qui constitue les données d'un mail selon notre datasets 
  En revanche, la connexion entre la page web et l'api semble ne pas fonctionner exactement comme prévu en raison d'une mauvaise structure de requête.
  Nous allons essayer de réparer ce bug le plus vite possible
  
Conclusion:

  Après avoir bien analysé et visualisé les données concernant le filtrage de mail en spam et non spam, nous avons implémenté 3 modèles différents:
  - KNN
  - Clustering
  - Regression lineaire
  A l'issue de ces tests, nous pouvons voir que le modèle clustering n'est pas adapté à ce problème. En effet ca précision malgré notre normalisation 
  des données et l'emploi d'un subset de la dataframe nous offre une précision maximale de 65%.
  Le modèle KNN réagit bien à la normalisation des données avec une précision de 91,19% contre 80% initialement.
  Nous n'avons pas réussi à améliorer nos précisions pour la regression en effectuant un subset de la dataframe (suppression des colonnes dont le p_value > 0,05).
  
